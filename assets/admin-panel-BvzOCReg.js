const n={PROTECTED_ACTIONS:["addStaff","toggleStaff","removeStaff","updateStaff","saveShifts","saveSettings","deleteAppointment","resetData","getSettings","regenerateApiKey","getTodayWhatsAppReminders","createManualAppointment"],call(n,t={},e=null){if(this.PROTECTED_ACTIONS.includes(n)){const i=e||("undefined"!=typeof AdminAuth?AdminAuth.isAuthenticated():null);return i||"undefined"==typeof AdminAuth?this._makeRequest(n,t,i):(AdminAuth.showLoginModal(),Promise.reject(new Error("Authentication required")))}return this._makeRequest(n,t,null)},_makeRequest:(n,t={},e=null)=>new Promise(async(i,a)=>{try{const o={...t,action:n};e&&(o.apiKey=e);const d="undefined"!=typeof window&&window.CONFIG?window.CONFIG:"undefined"!=typeof CONFIG?CONFIG:null;if(!d||!d.APPS_SCRIPT_URL)return void a(new Error("CONFIG not defined"));const r=d.APPS_SCRIPT_URL+"?"+new URLSearchParams(o).toString(),s=new AbortController,l=setTimeout(()=>s.abort(),3e4),u=await fetch(r,{method:"GET",mode:"cors",credentials:"omit",signal:s.signal,headers:{Accept:"application/json"}});if(clearTimeout(l),!u.ok)throw new Error(`HTTP error! status: ${u.status}`);const c=await u.json();if(!c||"object"!=typeof c)throw new Error("Geçersiz API yanıtı");i(c)}catch(o){"AbortError"===o.name?a(new Error("Timeout - API cevap vermedi")):o.message.includes("Failed to fetch")?a(new Error("API bağlantısı kurulamadı. CORS veya ağ hatası.")):a(o)}}),testApiKey(n){return this._makeRequest("getSettings",{},n)}};"undefined"!=typeof window&&(window.ApiService=n,window.apiCall=function(t,e={}){return n.call(t,e)},window.apiCallWithKey=function(t,e={},i){return n.call(t,e,i)});const t={API_KEY_STORAGE:"admin_api_key",SESSION_DURATION:864e5,_injectStyles(){if(document.getElementById("adminAuthStyles"))return;const n=document.createElement("style");n.id="adminAuthStyles",n.textContent="\n            /* Admin Auth Modal Styles */\n            .admin-auth-modal {\n                position: fixed;\n                top: 0;\n                left: 0;\n                width: 100%;\n                height: 100%;\n                background: rgba(0, 0, 0, 0.7);\n                display: flex;\n                align-items: center;\n                justify-content: center;\n                z-index: 10000;\n            }\n\n            .admin-auth-modal-content {\n                background: white;\n                border-radius: 15px;\n                padding: 40px;\n                max-width: 450px;\n                width: 90%;\n                box-shadow: 0 20px 60px rgba(0, 0, 0, 0.3);\n            }\n\n            .admin-auth-title {\n                margin: 0 0 10px 0;\n                color: #333;\n                font-size: 24px;\n                text-align: center;\n            }\n\n            .admin-auth-subtitle {\n                color: #666;\n                text-align: center;\n                margin-bottom: 30px;\n                font-size: 14px;\n            }\n\n            .admin-auth-error {\n                display: none;\n                background: #f8d7da;\n                color: #721c24;\n                padding: 12px;\n                border-radius: 8px;\n                margin-bottom: 20px;\n                font-size: 14px;\n            }\n\n            .admin-auth-error.show {\n                display: block;\n            }\n\n            .admin-auth-input-group {\n                margin-bottom: 20px;\n            }\n\n            .admin-auth-label {\n                display: block;\n                margin-bottom: 8px;\n                color: #555;\n                font-size: 14px;\n                font-weight: 500;\n            }\n\n            .admin-auth-input {\n                width: 100%;\n                padding: 12px;\n                border: 2px solid #e0e0e0;\n                border-radius: 8px;\n                font-size: 15px;\n                font-family: monospace;\n                box-sizing: border-box;\n            }\n\n            .admin-auth-input:focus {\n                outline: none;\n                border-color: #667eea;\n            }\n\n            .admin-auth-btn {\n                width: 100%;\n                padding: 14px;\n                background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n                color: white;\n                border: none;\n                border-radius: 8px;\n                font-size: 16px;\n                font-weight: 600;\n                cursor: pointer;\n                transition: all 0.3s;\n            }\n\n            .admin-auth-btn:hover:not(:disabled) {\n                transform: translateY(-2px);\n                box-shadow: 0 5px 15px rgba(102, 126, 234, 0.3);\n            }\n\n            .admin-auth-btn:disabled {\n                opacity: 0.6;\n                cursor: not-allowed;\n            }\n\n            .admin-auth-divider {\n                margin-top: 25px;\n                padding-top: 25px;\n                border-top: 1px solid #e0e0e0;\n                text-align: center;\n            }\n\n            .admin-auth-help-text {\n                color: #999;\n                font-size: 13px;\n                margin-bottom: 15px;\n            }\n\n            .admin-auth-btn-secondary {\n                padding: 10px 20px;\n                background: #6c757d;\n                color: white;\n                border: none;\n                border-radius: 6px;\n                font-size: 14px;\n                cursor: pointer;\n                transition: all 0.3s;\n            }\n\n            .admin-auth-btn-secondary:hover:not(:disabled) {\n                opacity: 0.9;\n            }\n\n            .admin-auth-btn-secondary:disabled {\n                opacity: 0.6;\n                cursor: not-allowed;\n            }\n\n            .admin-logout-btn {\n                position: absolute;\n                right: 20px;\n                top: 20px;\n                padding: 8px 16px;\n                background: rgba(255, 255, 255, 0.2);\n                color: white;\n                border: 1px solid rgba(255, 255, 255, 0.3);\n                border-radius: 6px;\n                font-size: 14px;\n                cursor: pointer;\n                transition: all 0.3s;\n            }\n\n            .admin-logout-btn:hover {\n                background: rgba(255, 255, 255, 0.3);\n            }\n        ",document.head.appendChild(n)},isAuthenticated(){const n=localStorage.getItem(this.API_KEY_STORAGE),t=localStorage.getItem(this.API_KEY_STORAGE+"_time");if(!n||!t)return!1;return Date.now()-parseInt(t)>this.SESSION_DURATION?(this.logout(),!1):n},saveApiKey(n){localStorage.setItem(this.API_KEY_STORAGE,n),localStorage.setItem(this.API_KEY_STORAGE+"_time",Date.now().toString())},logout(){localStorage.removeItem(this.API_KEY_STORAGE),localStorage.removeItem(this.API_KEY_STORAGE+"_time"),location.reload()},showLoginModal(){this._injectStyles();document.body.insertAdjacentHTML("beforeend",'\n            <div id="authModal" class="admin-auth-modal">\n                <div class="admin-auth-modal-content">\n                    <h2 class="admin-auth-title">🔐 Admin Girişi</h2>\n                    <p class="admin-auth-subtitle">Admin paneline erişmek için API key\'inizi girin</p>\n\n                    <div id="authError" class="admin-auth-error"></div>\n\n                    <div class="admin-auth-input-group">\n                        <label for="apiKeyInput" class="admin-auth-label">API Key</label>\n                        <input type="password" id="apiKeyInput" placeholder="RLX_..." class="admin-auth-input" autocomplete="off">\n                    </div>\n\n                    <button id="adminLoginBtn" class="admin-auth-btn">Giriş Yap</button>\n\n                    <div class="admin-auth-divider">\n                        <p class="admin-auth-help-text">API key\'iniz yok mu?</p>\n                        <button id="adminRequestKeyBtn" class="admin-auth-btn-secondary">📧 E-posta ile API Key İste</button>\n                    </div>\n                </div>\n            </div>\n        '),this._attachModalEvents(),setTimeout(()=>{document.getElementById("apiKeyInput")?.focus()},100)},_attachModalEvents(){const n=document.getElementById("adminLoginBtn");n&&n.addEventListener("click",()=>this.login());const t=document.getElementById("adminRequestKeyBtn");t&&t.addEventListener("click",()=>this.requestApiKey());const e=document.getElementById("apiKeyInput");e&&e.addEventListener("keypress",n=>{"Enter"===n.key&&this.login()})},async login(){const t=document.getElementById("apiKeyInput")?.value.trim(),e=document.getElementById("authError"),i=document.getElementById("adminLoginBtn");if(!i)return;if(!t)return void(e&&(e.textContent="❌ Lütfen API key girin",e.classList.add("show")));const a=i.textContent;i.textContent="Kontrol ediliyor...",i.disabled=!0;try{const o=await n.testApiKey(t);o.success?(this.saveApiKey(t),document.getElementById("authModal")?.remove(),location.reload()):o.requiresAuth?(e&&(e.textContent="❌ Geçersiz API key",e.classList.add("show")),i.textContent=a,i.disabled=!1):(e&&(e.textContent="❌ Bağlantı hatası",e.classList.add("show")),i.textContent=a,i.disabled=!1)}catch(o){e&&(e.textContent="❌ Bağlantı hatası: "+o.message,e.classList.add("show")),i.textContent=a,i.disabled=!1}},async requestApiKey(){const t=document.getElementById("adminRequestKeyBtn");if(!t)return;const e=t.innerHTML;t.innerHTML="Gönderiliyor...",t.disabled=!0;try{(await n.call("initializeApiKey")).success?alert("✅ API key e-posta adresinize gönderildi.\n\nLütfen e-postanızı kontrol edin ve gelen API key ile giriş yapın."):alert("❌ E-posta gönderilemedi.\n\nLütfen daha sonra tekrar deneyin veya sistem yöneticinizle iletişime geçin.")}catch(i){alert("❌ Bağlantı hatası.\n\nLütfen internet bağlantınızı kontrol edin.")}finally{t.innerHTML=e,t.disabled=!1}},addLogoutButton(){const n=document.querySelector(".header");if(!n)return;this._injectStyles();const t=document.createElement("button");t.className="admin-logout-btn",t.textContent="🔓 Çıkış",t.addEventListener("click",()=>{confirm("Çıkış yapmak istediğinize emin misiniz?")&&this.logout()}),n.style.position="relative",n.appendChild(t)}};"undefined"!=typeof window&&(window.AdminAuth=t);
